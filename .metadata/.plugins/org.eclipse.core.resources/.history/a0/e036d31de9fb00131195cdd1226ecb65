package com.togrul.polydroidofflinedictionary.settings;

import java.util.ArrayList;
import java.util.HashMap;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.os.StrictMode;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;

import com.togrul.polydroidofflinedictionary.R;
import com.togrul.polydroidofflinedictionary.SpinnerAdapter;
import com.togrul.polydroidofflinedictionary.download.Download;
import com.togrul.polydroidofflinedictionary.download.XMLfunctions;

public class DownloadActivity extends Fragment{
	private ListView lv;
	private Intent i;
	private Activity activity; 
		
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { 
		View view = getActivity().getLayoutInflater().inflate(R.layout.listplaceholder, null);
		activity = getActivity();

	 	if (android.os.Build.VERSION.SDK_INT > 9) {
		    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
		    StrictMode.setThreadPolicy(policy);
		}
		

		ArrayList<HashMap<String, String>> mylist = new ArrayList<HashMap<String, String>>();

		String xml = XMLfunctions.getXML();
		Document doc = XMLfunctions.XMLfromString(xml);

		int numResults = XMLfunctions.numResults(doc);

		if ((numResults <= 0)) {
			 Toast.makeText(activity, "No Internet Conection! Please try again later", Toast.LENGTH_LONG).show();
		}

		NodeList nodes = doc.getElementsByTagName("database");

		for (int i = 0; i < nodes.getLength(); i++) {
			HashMap<String, String> map = new HashMap<String, String>();

			Element e = (Element) nodes.item(i);
			String isDownload="";
			if(new SpinnerAdapter(activity).isDownloaded(Integer.valueOf(XMLfunctions.getValue(e, "id")))==1){
				isDownload = "downloaded";
			}else{
				isDownload = "donwload";
			}
			// Log.d("UTF-8",XMLfunctions.getValue(e, "name")+"");
			map.put("id", XMLfunctions.getValue(e, "id"));
			map.put("size", XMLfunctions.getValue(e, "size"));
			map.put("name", XMLfunctions.getValue(e, "name"));
			map.put("dbname", XMLfunctions.getValue(e, "dbname"));
			map.put("download", new SpinnerAdapter(activity).isDownloaded(Integer.valueOf(XMLfunctions.getValue(e, "id")))+ "");
			map.put("isdownload", isDownload+ "");
			mylist.add(map);
		}
		
		SimpleAdapter adapter = new SimpleAdapter(activity, mylist, R.layout.download_listview,
				new String[] { "name", "size","isdownload" }, new int[] { R.id.item_title, R.id.item_subtitle,R.id.is_item_downloaded_title });

		lv = (ListView) view.findViewById(R.id.listViewDatabaseList);
		lv.setTextFilterEnabled(true);
		lv.setAdapter(adapter);

		for(int i=0; i<=mylist.size(); i++) {
			
		}
		
		
		lv.setOnItemClickListener(new OnItemClickListener() {
			@SuppressWarnings("unchecked")
			public void onItemClick(AdapterView<?> parent, View view,int position, long id) {
				TextView txt = (TextView) view.findViewById(R.id.is_item_downloaded_title);
				HashMap<String, String> o = (HashMap<String, String>) lv.getItemAtPosition(position);
				if (Integer.valueOf(o.get("download")) == 1) {
					txt.setText("Downloaded");
					txt.setTextColor(Color.GREEN);
					i = new Intent(activity, Download.class);
					i.putExtra("id", o.get("id"));
					i.putExtra("size", o.get("size"));
					i.putExtra("name", o.get("name"));
					i.putExtra("dbname", o.get("dbname"));
					i.putExtra("isDownload", o.get("download"));
					startActivity(i);
				} else {
					txt.setText("Download");
					txt.setTextColor(Color.RED);
					i = new Intent(activity, Download.class);
					i.putExtra("id", o.get("id"));
					i.putExtra("size", o.get("size"));
					i.putExtra("name", o.get("name"));
					i.putExtra("dbname", o.get("dbname"));
					i.putExtra("isDownload", o.get("download"));
					startActivity(i);
				}
			}
		});
		adapter.notifyDataSetChanged();
		
	 	
		return view;
	}
		

//	@Override
//	public boolean onKeyDown(int keyCode, KeyEvent event) {
//		// Handle the back button
//		if (keyCode == KeyEvent.KEYCODE_BACK) {
//			// Ask the user if they want to quit
//			new AlertDialog.Builder(activity)
//					.setIcon(android.R.drawable.ic_dialog_alert)
//					.setTitle(R.string.d_quit)
//					.setMessage(R.string.d_really_quit)
//					.setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
//								public void onClick(DialogInterface dialog, int which) {
//									System.exit(-1);
//									activity.finish();
//								}
//							})
//					.setNegativeButton(R.string.d_no, new DialogInterface.OnClickListener() {
//						public void onClick(DialogInterface dialog, int which) {
//							launchIntent();
//							activity.finish();
//						}
//					}).show();
//			return true;
//		} else {
//			return super.onKeyDown(keyCode, event);
//		}
//	}


	public static Fragment instance() {
		DownloadActivity downloadActivity = new DownloadActivity();		
		return downloadActivity;
	}

	
	
//	private class ListDownloadAsynTask extends AsyncTask<Params, Progress, Result>{
//		
//	}
	

}